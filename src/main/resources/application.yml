spring:
  jmx:
    enabled: true
  kafka:
    bootstrapServers: ${BOOTSTRAP_SERVERS:localhost:9092}
    security.protocol: ${SECURITY_PROTOCOL:PLAINTEXT}
    ssl:
      trust-store-location: file://${SSL_TRUST_STORE_LOCATION:/opt/kafka-streams-template/ssl/truststore.jks}
      trust-store-password: ${SSL_TRUST_STORE_PASSWORD}
      key-store-location: file://${NEXUS_PATHO_TO_FHIR_SSL_KEY_STORE_LOCATION:opt/kafka-streams-template/ssl/keystore.jks}
      key-store-password: ${NEXUS_PATHO_TO_FHIR_SSL_KEY_STORE_PASSWORD}

  cloud:
      function:
        definition: processPathoSpecimen;processPathoReport
      stream:
        bindings:
          processPathoSpecimen-in-0:
            destination: ${KAFKA_TOPIC_PATHO_SPECIMEN:patho-specimen}
          processPathoSpecimen-out-0:
            destination: ${KAFKA_TOPIC_PATHO_SPECIMEN_FHIR_BUNDLE:idat-patho-specimen}
          processPathoReport-in-0:
            destination: ${KAFKA_TOPIC_PATHO_BEFUND:patho-report}
          processPathoReport-out-0:
            destination: ${KAFKA_TOPIC_PATHO_BEFUND_FHIR_BUNDLE:idat-patho-report}
        kafka:
          streams:
            binder:
              functions:
                processPathoSpecimen:
                  applicationId: nexus-patho-specimen-to-fhir
                processPathoReport:
                  applicationId: nexus-patho-report-to-fhir
              configuration:
                compression.type: gzip
                max.request.size: 5242880
                spring.json.use.type.headers: "false"
fhir:
  systems:
    serviceRequestId: ${PATHO_SERVICE_REQUEST_ID:https://your-local-system/pathology/serviceRequestId}
    diagnosticReportId: ${PATHO_DIAGNOSTIC_REPORT_ID:https://your-local-system/pathology/diagnosticReportId}
    patientId: ${PATHO_PATIENT_ID:https://your-local-system/pathology/patientId}
    encounterId: ${PATHO_ENCOUNTER_ID:https://your-local-system/pathology/encounterId}
    organizationId: ${PATHO_ORGANIZATION_ID:https://your-local-system/pathology/department}
    performerId: ${PATHO_PERFORMER_ID:https://your-local-system/pathology/performerId}
    specimenRequestId: ${PATHO_SPECIMEN_REQUEST_ID:https://your-local-system/pathology/specimenRequestId}
    specimenContainer: ${PATHO_SPECIMEN_CONTAINER:https://your-local-system/pathology/specimenContainer}
    specimenId: ${PATHO_SPECIMEN_ID:https://your-local-system/pathology/specimenId}
    pathoMicroGrouperId: ${PATHO_MICRO_GROUPER_ID:https://your-local-system/pathology/patho-microscopic-grouper-id}
    pathoMacroGrouperId: ${PATHO_MACRO_GROUPER_ID:https://your-local-system/pathology/patho-macroscopic-grouper-id}
    pathoDiagnosticConclusionGrouperId: ${PATHO_DIAGNOSTIC_CONCLUSION_GROUPER_ID:https://your-local-system/pathology/patho-diagnostic-conclusion-grouper-id}
    pathoFindingMicroId: ${PATHO_FINDING_MICRO_ID:https://your-local-system/pathology/patho-finding-micro-id}
    pathoFindingMacroId: ${PATHO_FINDING_MACRO_ID:https://your-local-system/pathology/patho-finding-macro-id}
    pathoFindingDiagnosticConclusionId: ${PATHO_FINDING_DIAGNOSTIC_CONCLUSION_ID:https://your-local-system/pathology/patho-finding-diagnostic-conclusion-id}


mapping:
  location:
    specimenType: ${NEXUS_PATHO_SPECIMEN_TYPES_MAPPING_CSV:src/main/resources/mappings/specimenType.csv}
    specimenExtractionMethod: ${NEXUS_PATHO_SPECIMEN_EXTRACTION_MAPPING_CSV:src/main/resources/mappings/specimenExtractionMethod.csv}
    specimenContainerType: ${NEXUS_PATHO_SPECIMEN_CONTAINERTYPE_MAPPING_CSV:src/main/resources/mappings/specimenContainerType.csv}
management:
  server:
    port: 8080
  endpoints:
    web:
      exposure:
        include: "health, prometheus, info, metric"
  endpoint:
    health:
      show-details: always
      enabled: true
    info:
      enabled: true

logging:
  level:
    org.springframework.kafka.config: info
    de.unimarburg.diz.nexuspathotofhir: debug
